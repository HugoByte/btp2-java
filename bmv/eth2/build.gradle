version = '0.1.0'

dependencies {
    compileOnly("foundation.icon:javaee-api:$javaeeVersion")
    implementation("foundation.icon:javaee-scorex:$scorexVersion")
    implementation project(':score-util')
    implementation project(':lib')

    testImplementation("org.junit.jupiter:junit-jupiter-api:$jupiterVersion")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:$jupiterVersion")

    testImplementation("foundation.icon:javaee-unittest:$javaeeUnittestVersion")
    testImplementation project(':test-lib')

    testImplementation "foundation.icon:icon-sdk:$iconsdkVersion"
    testImplementation 'com.squareup.okhttp3:okhttp:3.11.0'
    testImplementation 'foundation.icon:javaee-integration-test:0.9.0'

    testImplementation("com.fasterxml.jackson.core:jackson-databind:$jacksonVersion")
    testImplementation 'org.projectlombok:lombok:1.18.22'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.22'
}

optimizedJar {
    dependsOn(project(':lib').jar)
    dependsOn(project(':score-util').jar)
    mainClassName = 'foundation.icon.btp.bmv.eth2.BTPMessageVerifier'
    archivesBaseName = 'bmv-eth2'
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    } { exclude "score/*" }
    enableDebug = debugJar
}

deployJar {
    endpoints {
        local {
            uri = scoreTest.url
            nid = scoreTest.parseNid(scoreTest.nid)
        }
    }
    keystore = scoreTest.default.keyStore
    password = scoreTest.default.resolvedKeyPassword
}

test {
    useJUnitPlatform {
        if (!integrationTest) {
            excludeTags("integration")
        } else {
            // use the common config files
            systemProperty('env.props', new File('src/test/resources/env.props'))

            def prefix = 'score.path.'
            systemProperty(prefix + 'bmv-' + project.name, optimizedJar.outputJarName)
            dependsOn optimizedJar
            systemProperty prefix + 'bmc-mock.scoreFilePath', tasks.getByPath(":test-lib:optimizedJarMockBMC").outputJarName
        }
    }
}
